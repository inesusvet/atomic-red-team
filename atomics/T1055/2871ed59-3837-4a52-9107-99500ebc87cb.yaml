api_version: "2.0"
name: Process Injection with Go using CreateThread WinAPI
description: |
    This program executes shellcode in the current process using the following steps
    1. Allocate memory for the shellcode with VirtualAlloc setting the page permissions to Read/Write
    2. Use the RtlCopyMemory macro to copy the shellcode to the allocated memory space
    3. Change the memory page permissions to Execute/Read with VirtualProtect
    4. Call CreateThread on shellcode address
    5. Call WaitForSingleObject so the program does not end before the shellcode is executed

    This program leverages the functions from golang.org/x/sys/windows to call Windows procedures instead of manually loading them

    - PoC Credit: (https://github.com/Ne0nd0g/go-shellcode#createthread)
uuid: 2871ed59-3837-4a52-9107-99500ebc87cb
mitre:
    tactics:
        - 'TA0005: Defense Evasion'
        - 'TA0004: Privilege Escalation'
    techniques:
        - 'T1055: Process Injection'
requirements:
    platforms:
        - os: windows
steps:
    - name: process-injection-with-go-using-createthread-winapi
      inline: |
        $PathToAtomicsFolder\T1055\bin\x64\CreateThread.exe -debug
      executor: powershell
      cleanup:
        inline: |
            Stop-Process -Name CalculatorApp -ErrorAction SilentlyContinue
        executor: powershell
