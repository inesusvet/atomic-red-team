api_version: "2.0"
name: Simulating access to Windows Firefox Login Data
description: |
    Simulates an adversary accessing encrypted credentials from firefox web browser's login database.
    more info in https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data
uuid: eb8da98a-2e16-4551-b3dd-83de49baa14c
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1555: Credentials from Password Stores'
    subtechniques:
        - 'T1555.003: Credentials from Web Browsers'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Firefox must be installed
      inline: |-
        if ((Test-Path "C:\Program Files\Mozilla Firefox\firefox.exe") -Or (Test-Path "C:\Program Files (x86)\Mozilla Firefox\firefox.exe")) {exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        if ($env:PROCESSOR_ARCHITECTURE -eq 'AMD64') {$url="https://download.mozilla.org/?product=firefox-latest-ssl&os=win64&lang=en-US"}else {$url="https://download.mozilla.org/?product=firefox-latest-ssl&os=win&lang=en-US"}
        $installer = "PathToAtomicsFolder\..\ExternalPayloads\firefoxsetup.exe"
        (New-Object Net.WebClient).DownloadFile($url,$installer)
        Start-Process $installer -ArgumentList '/S' -Wait
        }}
      executor: powershell
    - name: |
        Firefox login data file must exist
      inline: |-
        if (Test-Path "$env:APPDATA\Mozilla\Firefox\Profiles\") {exit 0} else {{if ($env:PROCESSOR_ARCHITECTURE -eq 'AMD64') {$firefox="C:\Program Files\Mozilla Firefox\firefox.exe"}else {$firefox="C:\Program Files (x86)\Mozilla Firefox\firefox.exe"}
        Start-Process $firefox -ArgumentList '-CreateProfile Atomic' -Wait
        Start-Process $firefox -NoNewWindow
        Start-Sleep -s 20
        Stop-Process -Name firefox
        }}
      executor: powershell
    - name: simulating-access-to-windows-firefox-login-data
      inline: |
        Copy-Item "$env:APPDATA\Mozilla\Firefox\Profiles\" -Destination "PathToAtomicsFolder\..\ExternalPayloads" -Force -Recurse
      executor: powershell
      cleanup:
        inline: |
            Remove-Item -Path "PathToAtomicsFolder\..\ExternalPayloads\Profiles" -Force -ErrorAction Ignore -Recurse
        executor: powershell
