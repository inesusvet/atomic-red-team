api_version: "2.0"
name: GCP - Delete Service Account Key
description: "This Atomic will: \n  - Create a service account\n  - Create a service account key, \n  - Store the result of retrieving a single key for that service account as a variable\n  - Pass that variable for deletion\n  - Delete the service account\n\nThe idea for this Atomic came from a Rule published by the Elastic team.\n\nIdentifies the deletion of an Identity and Access Management (IAM) service account key in Google Cloud Platform (GCP).\nEach service account is associated with two sets of public/private RSA key pairs that are used to authenticate. \nIf a key is deleted, the application will no longer be able to access Google Cloud resources using that key. A security best practice is to rotate your service account keys regularly.\n\nReference: https://github.com/elastic/detection-rules/blob/main/rules/integrations/gcp/impact_gcp_storage_bucket_deleted.toml\n"
args:
    - name: project_id
      type: string
      default: atomic-test-1
    - name: service_name
      type: string
      default: atomic-service-account
uuid: 7ece1dea-49f1-4d62-bdcc-5801e3292510
mitre:
    tactics:
        - 'TA0003: Persistence'
        - 'TA0004: Privilege Escalation'
    techniques:
        - 'T1098: Account Manipulation'
requirements:
    platforms:
        - os: iaas:gcp
steps:
    - name: gcp---delete-service-account-key
      inline: |
        gcloud config set project {{.Args.project_id}}
        KEY=`gcloud iam service-accounts keys list --iam-account={{.Args.service_name}}@{{.Args.project_id}}.iam.gserviceaccount.com --format="value(KEY_ID)" --limit=1`
        gcloud iam service-accounts keys delete $KEY --iam-account={{.Args.service_name}}@{{.Args.project_id}}.iam.gserviceaccount.com --quiet
      executor: sh
      cleanup:
        inline: |
            cd "$PathToAtomicsFolder/T1098/src/T1098-17/"
            terraform state rm google_service_account_key.key
            terraform destroy -auto-approve
        executor: sh
