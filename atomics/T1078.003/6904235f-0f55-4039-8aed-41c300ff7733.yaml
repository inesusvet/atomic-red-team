api_version: "2.0"
name: Use PsExec to elevate to NT Authority\SYSTEM account
description: "PsExec is a powerful tool most known for its remote management capability. However, it can also be used to run processes as the local system account.\n\nThe local system account is a default windows account which has unrestricted access to all system resources.\n\nUpon successful execution, PsExec.exe will spawn a command prompt which will run 'whoami' as the local system account and then exit.    \n"
uuid: 6904235f-0f55-4039-8aed-41c300ff7733
mitre:
    tactics:
        - 'TA0005: Defense Evasion'
        - 'TA0003: Persistence'
        - 'TA0004: Privilege Escalation'
        - 'TA0001: Initial Access'
    techniques:
        - 'T1078: Valid Accounts'
    subtechniques:
        - 'T1078.003: Local Accounts'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        PsExec tool from Sysinternals must exist in the ExternalPayloads directory
      inline: |
        if (Test-Path "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe") { exit 0 } else { {New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip" -OutFile "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip"
        Expand-Archive "PathToAtomicsFolder\..\ExternalPayloads\PsTools.zip" "PathToAtomicsFolder\..\ExternalPayloads\PsTools" -Force
        Copy-Item "PathToAtomicsFolder\..\ExternalPayloads\PsTools\PsExec.exe" "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe" -Force
        } }
      executor: powershell
    - name: use-psexec-to-elevate-to-nt-authority\system-account
      inline: |
        "PathToAtomicsFolder\..\ExternalPayloads\PsExec.exe" -accepteula -s %COMSPEC% /c whoami
      executor: command_prompt
      cleanup:
        inline: ""
        executor: command_prompt
