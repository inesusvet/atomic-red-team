api_version: "2.0"
name: UltraVNC Execution
description: |
    An adversary may attempt to trick the user into downloading UltraVNC for use as a C2 channel.
    Upon successful execution, UltraVNC will be executed.
args:
    - name: UltraVNC_Viewer_Path
      type: path
      default: $env:ProgramFiles\'uvnc bvba\UltraVnc\vncviewer.exe'
uuid: 42e51815-a6cc-4c75-b970-3f0ff54b610e
mitre:
    tactics:
        - 'TA0011: Command and Control'
    techniques:
        - 'T1219: Remote Access Software'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        UltraVNC must exist at (#{UltraVNC_Viewer_Path})
      inline: |
        if (Test-Path #{UltraVNC_Viewer_Path}) {exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        Invoke-WebRequest "https://www.uvnc.eu/download/1381/UltraVNC_1_3_81_X64_Setup.exe" -OutFile "PathToAtomicsFolder\..\ExternalPayloads\vncsetup.exe"
        start-process "PathToAtomicsFolder\..\ExternalPayloads\vncsetup.exe" /silent
        }}
      executor: powershell
    - name: ultravnc-execution
      inline: |
        Start-Process {{.Args.UltraVNC_Viewer_Path}}
      executor: powershell
      cleanup:
        inline: |
            Stop-Process -Name "vncviewer" -force -erroraction silentlycontinue
        executor: powershell
