api_version: "2.0"
name: Create Systemd Service
description: |
    This test creates a Systemd service unit file and enables it as a service.
args:
    - name: execstart_action
      type: string
      default: /bin/touch /tmp/art-systemd-execstart-marker
    - name: execstop_action
      type: string
      default: /bin/touch /tmp/art-systemd-execstop-marker
    - name: execstartpre_action
      type: string
      default: /bin/touch /tmp/art-systemd-execstartpre-marker
    - name: execstartpost_action
      type: string
      default: /bin/touch /tmp/art-systemd-execstartpost-marker
    - name: systemd_service_path
      type: path
      default: /etc/systemd/system
    - name: systemd_service_file
      type: string
      default: art-systemd-service.service
    - name: execstoppost_action
      type: string
      default: /bin/touch /tmp/art-systemd-execstoppost-marker
    - name: execreload_action
      type: string
      default: /bin/touch /tmp/art-systemd-execreload-marker
uuid: d9e4f24f-aa67-4c6e-bcbf-85622b697a7c
mitre:
    tactics:
        - 'TA0003: Persistence'
        - 'TA0004: Privilege Escalation'
    techniques:
        - 'T1543: Create or Modify System Process'
    subtechniques:
        - 'T1543.002: Systemd Service'
requirements:
    platforms:
        - os: linux
steps:
    - name: create-systemd-service
      inline: |
        echo "[Unit]" > {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "Description=Atomic Red Team Systemd Service" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "[Service]" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "Type=simple"
        echo "ExecStart={{.Args.execstart_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "ExecStartPre={{.Args.execstartpre_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "ExecStartPost={{.Args.execstartpost_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "ExecReload={{.Args.execreload_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "ExecStop={{.Args.execstop_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "ExecStopPost={{.Args.execstoppost_action}}" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "[Install]" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        echo "WantedBy=default.target" >> {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
        systemctl daemon-reload
        systemctl enable {{.Args.systemd_service_file}}
        systemctl start {{.Args.systemd_service_file}}
      executor: bash
      cleanup:
        inline: |
            systemctl stop {{.Args.systemd_service_file}}
            systemctl disable {{.Args.systemd_service_file}}
            rm -rf {{.Args.systemd_service_path}}/{{.Args.systemd_service_file}}
            systemctl daemon-reload
        executor: bash
