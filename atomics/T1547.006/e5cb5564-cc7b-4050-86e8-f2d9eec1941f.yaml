api_version: "2.0"
name: Snake Malware Kernel Driver Comadmin
description: "The following Atomic Test will write an file, comadmin.dat, to disk. From the report, Snake's installer drops the kernel driver and a custom DLL which is used to load the driver into a\nsingle AES encrypted file on disk. Typically, this file is named “comadmin.dat” and is stored in the %windows%\\system32\\Com directory. \nThis Atomic Test will write a hardcoded named file to disk in the com directory named comadmin.dat.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n"
uuid: e5cb5564-cc7b-4050-86e8-f2d9eec1941f
mitre:
    tactics:
        - 'TA0003: Persistence'
        - 'TA0004: Privilege Escalation'
    techniques:
        - 'T1547: Boot or Logon Autostart Execution'
    subtechniques:
        - 'T1547.006: Kernel Modules and Extensions'
requirements:
    platforms:
        - os: windows
steps:
    - name: snake-malware-kernel-driver-comadmin
      inline: |
        $examplePath = Join-Path $env:windir "system32\Com"; if (-not (Test-Path $examplePath)) { New-Item -ItemType Directory -Path $examplePath | Out-Null }; $exampleName = "comadmin.dat"; $exampleFullPath = Join-Path $examplePath $exampleName; $randomBytes = New-Object Byte[] 0x1000; (New-Object Random).NextBytes($randomBytes); [System.IO.File]::WriteAllBytes($exampleFullPath, $randomBytes)
      executor: powershell
      cleanup:
        inline: |
            $examplePath = Join-Path $env:windir "system32\Com"; $exampleName = "comadmin.dat"; $exampleFullPath = Join-Path $examplePath $exampleName; if (Test-Path $exampleFullPath) { Remove-Item $exampleFullPath -Force }
        executor: powershell
