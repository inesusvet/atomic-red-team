api_version: "2.0"
name: Tor Proxy Usage - Windows
description: "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy will be launched, run for 60 seconds, and then exit. \n"
args:
    - name: TorExe
      type: string
      default: PathToAtomicsFolder\..\ExternalPayloads\tor\Tor\tor.exe
uuid: 7b9d85e5-c4ce-4434-8060-d3de83595e69
mitre:
    tactics:
        - 'TA0011: Command and Control'
    techniques:
        - 'T1090: Proxy'
    subtechniques:
        - 'T1090.003: Multi-hop Proxy'
requirements:
    platforms:
        - os: windows
steps:
    - name: "tor.exe must be installed on the machine \n"
      inline: |
        if (Test-Path "#{TorExe}") {exit 0} else {{New-Item -Type Directory "PathToAtomicsFolder\..\ExternalPayloads\" -ErrorAction Ignore -Force | Out-Null
        Invoke-WebRequest "https://archive.torproject.org/tor-package-archive/torbrowser/11.0.6/tor-win32-0.4.6.9.zip" -OutFile "PathToAtomicsFolder\..\ExternalPayloads\tor.zip"
        expand-archive -LiteralPath "PathToAtomicsFolder\..\ExternalPayloads\tor.zip" -DestinationPath "PathToAtomicsFolder\..\ExternalPayloads\tor"
        }}
      executor: powershell
    - name: tor-proxy-usage---windows
      inline: |
        invoke-expression 'cmd /c start powershell -Command {cmd /c "{{.Args.TorExe}}"}'
        sleep -s 60
        stop-process -name "tor" | out-null
      executor: powershell
      cleanup:
        inline: ""
        executor: powershell
