api_version: "2.0"
name: Process injection ListPlanting
description: This test injects shellcode into a remote RegEdit process using the ListPlanting technique. ListPlanting exploits Window with ListView control. Code write to memory with NtWriteVirtualMemory. The shellcode is executed via PostMessage. When successful, a message box will appear with the title "Warning" and the content "Atomic Red Team" after a few seconds. Notepad will open following the appearance of the message box.
args:
    - name: exe_binary
      type: path
      default: PathToAtomicsFolder\T1055.015\bin\ListPlanting.exe
uuid: 4f3c7502-b111-4dfe-8a6e-529307891a59
mitre:
    tactics:
        - 'TA0005: Defense Evasion'
        - 'TA0004: Privilege Escalation'
    techniques:
        - 'T1055: Process Injection'
    subtechniques:
        - 'T1055.015: ListPlanting'
requirements:
    platforms:
        - os: windows
steps:
    - name: process-injection-listplanting
      inline: |-
        Start-Process "{{.Args.exe_binary}}"
        Start-Sleep -Seconds 7
        Get-Process -Name Notepad -ErrorAction SilentlyContinue | Stop-Process -Force
      executor: powershell
      cleanup:
        inline: Get-Process -Name Notepad -ErrorAction SilentlyContinue | Stop-Process -Force
        executor: powershell
