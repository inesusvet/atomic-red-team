api_version: "2.0"
name: InstallUtil class constructor method call
description: |
    Executes the installer assembly class constructor. Upon execution, version information will be displayed the .NET framework install utility.
args:
    - name: test_harness
      type: path
      default: PathToAtomicsFolder\T1218.004\src\InstallUtilTestHarness.ps1
    - name: assembly_dir
      type: path
      default: $Env:TEMP\
    - name: invocation_method
      type: string
      default: Executable
    - name: assembly_filename
      type: string
      default: T1218.004.dll
uuid: 9b7a7cfc-dd2e-43f5-a885-c0a3c270dd93
mitre:
    tactics:
        - 'TA0005: Defense Evasion'
    techniques:
        - 'T1218: System Binary Proxy Execution'
    subtechniques:
        - 'T1218.004: InstallUtil'
requirements:
    platforms:
        - os: windows
steps:
    - name: installutil-class-constructor-method-call
      inline: |
        # Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly
        . "{{.Args.test_harness}}"

        $InstallerAssemblyDir = "{{.Args.assembly_dir}}"
        $InstallerAssemblyFileName = "{{.Args.assembly_filename}}"
        $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName

        $CommandLine = "/logfile= /logtoconsole=false `"$InstallerAssemblyFullPath`""
        $ExpectedOutput = 'Constructor_'

        $TestArgs = @{
            OutputAssemblyDirectory = $InstallerAssemblyDir
            OutputAssemblyFileName = $InstallerAssemblyFileName
            InvocationMethod = '{{.Args.invocation_method}}'
            CommandLine = $CommandLine
        }

        $ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly

        if ($ActualOutput -ne $ExpectedOutput) {
            throw @"
        InstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.
        Expected: $ExpectedOutput
        Actual: $ActualOutput
        "@
        }
      executor: powershell
      cleanup:
        inline: |
            $InstallerAssemblyDir = "{{.Args.assembly_dir}}"
            $InstallerAssemblyFileName = "{{.Args.assembly_filename}}"
            $InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName
            Remove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore
        executor: powershell
