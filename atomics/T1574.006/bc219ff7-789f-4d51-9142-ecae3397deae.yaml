api_version: "2.0"
name: Shared Library Injection via LD_PRELOAD
description: |
    This test injects a shared object library via the LD_PRELOAD environment variable to execute. This technique was used by threat actor Rocke during the exploitation of Linux web servers. This requires the `glibc` package.

    Upon successful execution, bash will utilize LD_PRELOAD to load the shared object library `/etc/ld.so.preload`. Output will be via stdout.
args:
    - name: path_to_shared_library_source
      type: path
      default: PathToAtomicsFolder/T1574.006/src/Linux/T1574.006.c
    - name: path_to_shared_library
      type: path
      default: /tmp/T1574006.so
uuid: bc219ff7-789f-4d51-9142-ecae3397deae
mitre:
    tactics:
        - 'TA0003: Persistence'
        - 'TA0004: Privilege Escalation'
        - 'TA0005: Defense Evasion'
    techniques:
        - 'T1574: Hijack Execution Flow'
    subtechniques:
        - 'T1574.006: Dynamic Linker Hijacking'
requirements:
    platforms:
        - os: linux
steps:
    - name: |
        The shared library must exist on disk at specified location (#{path_to_shared_library})
      inline: |
        if [ -f #{path_to_shared_library} ]; then exit 0; else {gcc -shared -fPIC -o #{path_to_shared_library} #{path_to_shared_library_source}
        }; fi;
      executor: bash
    - name: shared-library-injection-via-ld_preload
      inline: |
        LD_PRELOAD={{.Args.path_to_shared_library}} ls
      executor: bash
      cleanup:
        inline: ""
        executor: bash
